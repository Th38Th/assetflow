version: "3.8"

services:
  web:
    build: .
    ports:
      - "8000:8000"
      - "5678:5678"
    volumes:
      - ./app:/app/app
      - ./uploads:/app/uploaded_assets
      - ./alembic:/app/alembic
    env_file:
      - .env
    depends_on:
      db:
        condition: service_started
      kafka:
        condition: service_healthy

  db:
    image: postgres
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - .env

  redis:
    image: redis
    ports:
      - "6379:6379"
    
  notifier:
    build:
      context: ./notifier
    depends_on:
      kafka:
        condition: service_healthy
    restart: unless-stopped
    env_file:
      - notifier/.env

  kafka:
    image: bitnami/kafka
    restart: unless-stopped
    ports:
      - "9092:9092"
    environment:
      KAFKA_CFG_NODE_ID: 0
      KAFKA_CFG_PROCESS_ROLES: controller,broker
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 0@kafka:9093
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
      ALLOW_PLAINTEXT_LISTENER: "yes"
    depends_on:
      - zookeeper
    healthcheck:
      test: ["CMD", "kafka-topics.sh", "--bootstrap-server", "kafka:9092", "--list"]
      interval: 10s
      timeout: 5s
      retries: 5
    
  zookeeper:
    image: bitnami/zookeeper
    environment:
      ALLOW_ANONYMOUS_LOGIN: yes
    ports:
      - "2181:2181"

volumes:
  postgres_data:
